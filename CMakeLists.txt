CMAKE_MINIMUM_REQUIRED(VERSION 1.4)

IF (CMAKE_MAJOR_VERSION MATCHES "^1$")
  IF (CMAKE_MINOR_VERSION MATCHES "^[56]$")
    SET(CABLE_CMAKE_HAS_EXPLICIT_INSTALL_FILES 1)
  ENDIF (CMAKE_MINOR_VERSION MATCHES "^[56]$")
ENDIF (CMAKE_MAJOR_VERSION MATCHES "^1$")

# Project name and version.
PROJECT (CABLE)

SET(CABLE_VERSION_MAJOR 0)
SET(CABLE_VERSION_MINOR 1)
SET(CABLE_VERSION_PATCH development)
SET(CABLE_VERSION_STRING
    "${CABLE_VERSION_MAJOR}.${CABLE_VERSION_MINOR}.${CABLE_VERSION_PATCH}")

# Limit dependencies in UNIX.
INCLUDE_REGULAR_EXPRESSION ("^(cxx|cable|ct|CxxTypes).*$")

# Build the standard components.
SUBDIRS (Expat CxxTypes Parsers Generators Executables)

# Optionally build the Tcl wrapper facility.
OPTION (CABLE_TCL_FACILITY "Build CABLE's Tcl wrapping facility." ON)
IF (CABLE_TCL_FACILITY)
  SUBDIRS(CableTclFacility)

  IF(NOT CABLE_CMAKE_HAS_EXPLICIT_INSTALL_FILES)
    SET(CABLE_TCL_PKGINDEX_FOR_INSTALL "${CABLE_BINARY_DIR}/pkgIndex.tcl")
    INSTALL_FILES(/lib/Cable ".tcl" "pkgIndex")
  ENDIF(NOT CABLE_CMAKE_HAS_EXPLICIT_INSTALL_FILES)
ENDIF (CABLE_TCL_FACILITY)

# Configure the CABLE version number in the build.
CONFIGURE_FILE ("${CABLE_SOURCE_DIR}/cableVersion.h.in"
                "${CABLE_BINARY_DIR}/cableVersion.h" @ONLY IMMEDIATE)

# Need to include generated headers.
INCLUDE_DIRECTORIES (${CABLE_BINARY_DIR})

# Make a distinct copy of the executable and library paths so another
# program's LOAD_CACHE command can get them.
SET (CABLE_EXECUTABLE_PATH "${EXECUTABLE_OUTPUT_PATH}"
     CACHE INTERNAL "Single output directory for building all executables.")
SET (CABLE_LIBRARY_PATH "${LIBRARY_OUTPUT_PATH}"
     CACHE INTERNAL "Single output directory for building all libraries.")

#-----------------------------------------------------------------------------
# Configure the CABLEConfig.cmake file for the build tree:

SET(CABLE_INCLUDE_DIRS "${CABLE_SOURCE_DIR}")

IF(EXECUTABLE_OUTPUT_PATH)
  SET(CABLE_EXECUTABLE_DIR "${EXECUTABLE_OUTPUT_PATH}")
ELSE(EXECUTABLE_OUTPUT_PATH)
  SET(CABLE_EXECUTABLE_DIR "${CABLE_BINARY_DIR}/Executables")
ENDIF(EXECUTABLE_OUTPUT_PATH)

IF(LIBRARY_OUTPUT_PATH)
  SET(CABLE_LIBRARY_DIRS "${LIBRARY_OUTPUT_PATH}")
ENDIF(LIBRARY_OUTPUT_PATH)

IF (CABLE_TCL_FACILITY)
  SET(CABLE_TCL_LIBRARY "CableTclFacility")
  IF(NOT LIBRARY_OUTPUT_PATH)
    SET(CABLE_LIBRARY_DIRS ${CABLE_LIBRARY_DIRS}
                           "${CABLE_BINARY_DIR}/CableTclFacility")
  ENDIF(NOT LIBRARY_OUTPUT_PATH)
ENDIF (CABLE_TCL_FACILITY)

IF(WIN32)
  SET(CABLE_EXECUTABLE_FILE "${CABLE_EXECUTABLE_DIR}/${CMAKE_CFG_INTDIR}/cable.exe")
ELSE(WIN32)
  SET(CABLE_EXECUTABLE_FILE "${CABLE_EXECUTABLE_DIR}/${CMAKE_CFG_INTDIR}/cable")
ENDIF(WIN32)

CONFIGURE_FILE("${CABLE_SOURCE_DIR}/CABLEConfig.cmake.in"
               "${CABLE_BINARY_DIR}/CABLEConfig.cmake" IMMEDIATE @ONLY)

#-----------------------------------------------------------------------------
# Configure the CABLEConfig.cmake file for the install tree:

IF(UNIX)
  SET(CABLE_EXECUTABLE_FILE "${CMAKE_INSTALL_PREFIX}/bin/cable")
  SET(CABLE_LIBRARY_DIRS "${CMAKE_INSTALL_PREFIX}/lib/Cable")
  SET(CABLE_INCLUDE_DIRS "${CMAKE_INSTALL_PREFIX}/include/Cable")

  IF (CABLE_TCL_FACILITY)
    SET(CABLE_TCL_LIBRARY "CableTclFacility")
  ENDIF (CABLE_TCL_FACILITY)

  IF(CABLE_CMAKE_HAS_EXPLICIT_INSTALL_FILES)
    SET(CABLE_USECABLE_FOR_INSTALL "${CABLE_BINARY_DIR}/InstallOnly/CABLEConfig.cmake")
    INSTALL_FILES(/lib/Cable FILES "${CABLE_USECABLE_FOR_INSTALL}")
  ELSE(CABLE_CMAKE_HAS_EXPLICIT_INSTALL_FILES)
    # Hack for installation with CMake 1.4.
    SET(CABLE_USECABLE_FOR_INSTALL "${CABLE_BINARY_DIR}/Executables/CABLEConfig.cmake")
  ENDIF(CABLE_CMAKE_HAS_EXPLICIT_INSTALL_FILES)

  CONFIGURE_FILE("${CABLE_SOURCE_DIR}/CABLEConfig.cmake.in"
                 "${CABLE_USECABLE_FOR_INSTALL}" IMMEDIATE @ONLY)
ENDIF(UNIX)
